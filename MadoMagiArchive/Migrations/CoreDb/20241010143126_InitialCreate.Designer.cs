// <auto-generated />
using System;
using MadoMagiArchive.CoreServices;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MadoMagiArchive.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    [Migration("20241010143126_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("MadoMagiArchive.CoreServices.CoreModels.LogItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetNewData")
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetOldData")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TargetRowId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TargetTable")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("MadoMagiArchive.CoreServices.CoreModels.Setting", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("MadoMagiArchive.CoreServices.CoreModels.TablePermission", b =>
                {
                    b.Property<string>("Table")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Owner")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Permission")
                        .HasColumnType("INTEGER");

                    b.HasKey("Table");

                    b.ToTable("TablePermissions");
                });

            modelBuilder.Entity("MadoMagiArchive.CoreServices.CoreModels.UserItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AccessLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Owner")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Permission")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MadoMagiArchive.CoreServices.CoreModels.UserSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Name")
                        .IsUnique();

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("MadoMagiArchive.CoreServices.CoreModels.UserSetting", b =>
                {
                    b.HasOne("MadoMagiArchive.CoreServices.CoreModels.UserItem", null)
                        .WithMany("Settings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MadoMagiArchive.CoreServices.CoreModels.UserItem", b =>
                {
                    b.Navigation("Settings");
                });
#pragma warning restore 612, 618
        }
    }
}
